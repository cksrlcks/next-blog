{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/chanki/react/next-blog/components/activeLink.js\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport React, { Children } from 'react';\n\nvar ActiveLink = function ActiveLink(_ref) {\n  var children = _ref.children,\n      activeClassName = _ref.activeClassName,\n      props = _objectWithoutProperties(_ref, [\"children\", \"activeClassName\"]);\n\n  var _useRouter = useRouter(),\n      pathname = _useRouter.pathname;\n\n  var child = Children.only(children);\n  var className = pathname === props.href ? \"\".concat(child.props.className, \" \").concat(activeClassName) : child.props.className;\n  return __jsx(Link, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.cloneElement(child, {\n    className: className\n  }));\n};\n\nexport default ActiveLink;","map":{"version":3,"sources":["/Users/chanki/react/next-blog/components/activeLink.js"],"names":["useRouter","Link","React","Children","ActiveLink","children","activeClassName","props","pathname","child","only","className","href","cloneElement"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA6C;AAAA,MAA1CC,QAA0C,QAA1CA,QAA0C;AAAA,MAAhCC,eAAgC,QAAhCA,eAAgC;AAAA,MAAZC,KAAY;;AAAA,mBACvCP,SAAS,EAD8B;AAAA,MACpDQ,QADoD,cACpDA,QADoD;;AAE5D,MAAMC,KAAK,GAAGN,QAAQ,CAACO,IAAT,CAAcL,QAAd,CAAd;AAEA,MAAMM,SAAS,GACXH,QAAQ,KAAKD,KAAK,CAACK,IAAnB,aACSH,KAAK,CAACF,KAAN,CAAYI,SADrB,cACkCL,eADlC,IAEMG,KAAK,CAACF,KAAN,CAAYI,SAHtB;AAKA,SAAO,MAAC,IAAD,eAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkBL,KAAK,CAACW,YAAN,CAAmBJ,KAAnB,EAA0B;AAAEE,IAAAA,SAAS,EAATA;AAAF,GAA1B,CAAlB,CAAP;AACH,CAVD;;AAYA,eAAeP,UAAf","sourcesContent":["import { useRouter } from 'next/router'\nimport Link from 'next/link'\nimport React, { Children } from 'react'\n\nconst ActiveLink = ({ children, activeClassName, ...props }) => {\n    const { pathname } = useRouter()\n    const child = Children.only(children)\n\n    const className =\n        pathname === props.href\n            ? `${child.props.className} ${activeClassName}`\n            : child.props.className\n\n    return <Link {...props}>{React.cloneElement(child, { className })}</Link>\n}\n\nexport default ActiveLink"]},"metadata":{},"sourceType":"module"}