{"ast":null,"code":"var _jsxFileName = \"/Users/chanki/react/next-blog/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport CardList from '../components/cardList';\nimport client from '../config';\nimport styled from 'styled-components';\n\nfunction Home(props) {\n  console.log(props);\n  useEffect(() => {\n    var grid = document.querySelector('.grid');\n    var msnry = new Masonry(grid, {\n      itemSelector: '.grid-item'\n    });\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(CardContainer, {\n    className: \"grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.items.map(item => __jsx(CardList, {\n    item: item,\n    key: item.sys.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"pagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(Paginator, {\n    handlePaginationChange: event => updatePage(event),\n    range: range,\n    skip: page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n}\n\nHome.getInitialProps = async ({\n  query\n}) => {\n  let page = 1;\n\n  if (query.page) {\n    page = parseInt(query.page + '');\n  }\n\n  const limit = 2;\n  const enteries = await client.getEntries({\n    skip: (page - 1) * limit,\n    limit\n  });\n  return enteries;\n};\n\nexport default Home;\nconst CardContainer = styled.div.withConfig({\n  displayName: \"pages__CardContainer\",\n  componentId: \"sc-1cl0c4r-0\"\n})([\"padding:2em 0 1em;@media (max-width:968px){padding:0.5em 0;}\"]);","map":{"version":3,"sources":["/Users/chanki/react/next-blog/pages/index.js"],"names":["React","useEffect","CardList","client","styled","Home","props","console","log","grid","document","querySelector","msnry","Masonry","itemSelector","items","map","item","sys","id","event","updatePage","range","page","getInitialProps","query","parseInt","limit","enteries","getEntries","skip","CardContainer","div"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX;AACA,QAAIC,KAAK,GAAG,IAAIC,OAAJ,CAAYJ,IAAZ,EAAkB;AAC1BK,MAAAA,YAAY,EAAE;AADY,KAAlB,CAAZ;AAGH,GALQ,EAKN,EALM,CAAT;AAMA,SACI,4BACI,MAAC,aAAD;AAAe,IAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,KAAK,CAACS,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjB,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAL,CAASC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,sBAAsB,EAAGC,KAAD,IAAWC,UAAU,CAACD,KAAD,CAAxD;AAAiE,IAAA,KAAK,EAAEE,KAAxE;AAA+E,IAAA,IAAI,EAAEC,IAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CADJ;AAYH;;AAEDlB,IAAI,CAACmB,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AACxC,MAAIF,IAAI,GAAG,CAAX;;AAEA,MAAIE,KAAK,CAACF,IAAV,EAAgB;AACZA,IAAAA,IAAI,GAAGG,QAAQ,CAACD,KAAK,CAACF,IAAN,GAAa,EAAd,CAAf;AACH;;AACD,QAAMI,KAAK,GAAG,CAAd;AAEA,QAAMC,QAAQ,GAAG,MAAMzB,MAAM,CAAC0B,UAAP,CAAkB;AACrCC,IAAAA,IAAI,EAAE,CAACP,IAAI,GAAG,CAAR,IAAaI,KADkB;AAErCA,IAAAA;AAFqC,GAAlB,CAAvB;AAIA,SAAOC,QAAP;AACH,CAbD;;AAeA,eAAevB,IAAf;AAEA,MAAM0B,aAAa,GAAG3B,MAAM,CAAC4B,GAAV;AAAA;AAAA;AAAA,oEAAnB","sourcesContent":["import React, { useEffect } from 'react';\nimport CardList from '../components/cardList';\nimport client from '../config';\nimport styled from 'styled-components';\n\nfunction Home(props) {\n    console.log(props)\n    useEffect(() => {\n        var grid = document.querySelector('.grid');\n        var msnry = new Masonry(grid, {\n            itemSelector: '.grid-item'\n        });\n    }, [])\n    return (\n        <>\n            <CardContainer className=\"grid\">\n                {props.items.map(item => (\n                    <CardList item={item} key={item.sys.id} />\n                ))}\n            </CardContainer>\n            <div className=\"pagination\">\n                <Paginator handlePaginationChange={(event) => updatePage(event)} range={range} skip={page} />\n            </div>\n        </>\n    )\n}\n\nHome.getInitialProps = async ({ query }) => {\n    let page = 1;\n\n    if (query.page) {\n        page = parseInt(query.page + '');\n    }\n    const limit = 2;\n\n    const enteries = await client.getEntries({\n        skip: (page - 1) * limit,\n        limit,\n    });\n    return enteries;\n}\n\nexport default Home;\n\nconst CardContainer = styled.div`\n    padding:2em 0 1em;\n    @media (max-width: 968px) {\n        padding:0.5em 0;\n    }\n`"]},"metadata":{},"sourceType":"module"}