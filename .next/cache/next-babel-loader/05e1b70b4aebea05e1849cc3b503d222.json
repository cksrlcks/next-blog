{"ast":null,"code":"var _jsxFileName = \"/Users/chanki/react/next-blog/components/postDetail.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport CodeBlock from '../components/codeRender';\nimport ReactMarkdown from \"react-markdown\";\nimport styled from 'styled-components';\nimport formatDate from '../components/renderDate';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nvar Post = function Post(_ref) {\n  var pageContent = _ref.pageContent;\n  var _pageContent$fields = pageContent.fields,\n      title = _pageContent$fields.title,\n      postbody = _pageContent$fields.postbody,\n      tags = _pageContent$fields.tags;\n  var updatedAt = pageContent.sys.updatedAt;\n  console.log(pageContent);\n  return __jsx(PostBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(TitleBlock, {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, title), __jsx(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(ClockIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), \" \", formatDate(updatedAt)), tags && __jsx(\"div\", {\n    className: \"tags\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(TagIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), __jsx(TagsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, tags.map(function (tag, index) {\n    return __jsx(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, tag);\n  })))), __jsx(\"div\", {\n    className: \"post-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(ReactMarkdown, {\n    source: postbody,\n    renderers: {\n      code: CodeBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n};\n\nexport default Post;\nvar PostBody = styled.div.withConfig({\n  displayName: \"postDetail__PostBody\",\n  componentId: \"sc-1jm833q-0\"\n})([\"padding:3em 1em;.meta{&:after{content:\\\"\\\";display:block;clear:both;}.tags{float:left;}.date{float:left;}}\"]);\nvar TagsList = styled.ul.withConfig({\n  displayName: \"postDetail__TagsList\",\n  componentId: \"sc-1jm833q-1\"\n})([\"display:inline-block;li{display:inline-block;margin-right:0.6em;color:#8794a3;}\"]);\nvar TagIcon = styled(FontAwesomeIcon).attrs({\n  icon: \"tag\",\n  color: \"#8794a3\"\n}).withConfig({\n  displayName: \"postDetail__TagIcon\",\n  componentId: \"sc-1jm833q-2\"\n})([\"display:inline-block;margin:0 0.2em 0 0.4em;opacity:0.5;\"]);\nvar ClockIcon = styled(FontAwesomeIcon).attrs({\n  icon: \"clock\",\n  color: \"#8794a3\"\n}).withConfig({\n  displayName: \"postDetail__ClockIcon\",\n  componentId: \"sc-1jm833q-3\"\n})([\"display:inline-block;margin:0 0.6em 0 0.4em;opacity:0.5;\"]);\nvar TitleBlock = styled.h1.withConfig({\n  displayName: \"postDetail__TitleBlock\",\n  componentId: \"sc-1jm833q-4\"\n})([\"font-size:3em;line-height:1.5em;letter-spacing:-0.02em;margin-bottom:2em;font-weight:800;word-break:keep-all;\"]);","map":{"version":3,"sources":["/Users/chanki/react/next-blog/components/postDetail.js"],"names":["CodeBlock","ReactMarkdown","styled","formatDate","FontAwesomeIcon","Post","pageContent","fields","title","postbody","tags","updatedAt","sys","console","log","map","tag","index","code","PostBody","div","TagsList","ul","TagIcon","attrs","icon","color","ClockIcon","TitleBlock","h1"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAqB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AAAA,4BAEIA,WAAW,CAACC,MAFhB;AAAA,MAEtBC,KAFsB,uBAEtBA,KAFsB;AAAA,MAEfC,QAFe,uBAEfA,QAFe;AAAA,MAELC,IAFK,uBAELA,IAFK;AAAA,MAGtBC,SAHsB,GAGRL,WAAW,CAACM,GAHJ,CAGtBD,SAHsB;AAI9BE,EAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACA,SACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BE,KAA/B,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,OAAqCL,UAAU,CAACQ,SAAD,CAA/C,CADJ,EAEKD,IAAI,IACD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACK,GAAL,CAAS,UAACC,GAAD,EAAMC,KAAN;AAAA,WAAgB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,GAAjB,CAAhB;AAAA,GAAT,CADL,CAFJ,CAHR,CAFJ,EAeI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEP,QAAvB;AAAiC,IAAA,SAAS,EAAE;AAAES,MAAAA,IAAI,EAAElB;AAAR,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfJ,CADJ;AAqBH,CA1BD;;AA4BA,eAAeK,IAAf;AAEA,IAAMc,QAAQ,GAAGjB,MAAM,CAACkB,GAAV;AAAA;AAAA;AAAA,kHAAd;AAgBA,IAAMC,QAAQ,GAAGnB,MAAM,CAACoB,EAAV;AAAA;AAAA;AAAA,uFAAd;AAQA,IAAMC,OAAO,GAAGrB,MAAM,CAACE,eAAD,CAAN,CAAwBoB,KAAxB,CAA8B;AAC1CC,EAAAA,IAAI,EAAE,KADoC;AAC7BC,EAAAA,KAAK,EAAE;AADsB,CAA9B,CAAH;AAAA;AAAA;AAAA,gEAAb;AAOA,IAAMC,SAAS,GAAGzB,MAAM,CAACE,eAAD,CAAN,CAAwBoB,KAAxB,CAA8B;AAC5CC,EAAAA,IAAI,EAAE,OADsC;AAC7BC,EAAAA,KAAK,EAAE;AADsB,CAA9B,CAAH;AAAA;AAAA;AAAA,gEAAf;AAQA,IAAME,UAAU,GAAG1B,MAAM,CAAC2B,EAAV;AAAA;AAAA;AAAA,qHAAhB","sourcesContent":["import CodeBlock from '../components/codeRender';\nimport ReactMarkdown from \"react-markdown\";\nimport styled from 'styled-components';\nimport formatDate from '../components/renderDate';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Post = ({ pageContent }) => {\n\n    const { title, postbody, tags } = pageContent.fields;\n    const { updatedAt } = pageContent.sys;\n    console.log(pageContent)\n    return (\n        <PostBody>\n            <TitleBlock className=\"title\">{title}</TitleBlock>\n            <div className=\"meta\">\n                <div className=\"date\"><ClockIcon /> {formatDate(updatedAt)}</div>\n                {tags &&\n                    <div className=\"tags\">\n                        <TagIcon />\n                        <TagsList>\n                            {tags.map((tag, index) => <li key={index}>{tag}</li>)}\n                        </TagsList>\n                    </div>\n                }\n\n            </div>\n\n            <div className=\"post-body\">\n                <ReactMarkdown source={postbody} renderers={{ code: CodeBlock }} />\n            </div>\n        </PostBody>\n    )\n}\n\nexport default Post;\n\nconst PostBody = styled.div`\n    padding:3em 1em;\n    .meta{\n        &:after{\n            content:\"\";\n            display:block;\n            clear:both;\n        }\n        .tags{\n            float:left;\n        }\n        .date{\n            float:left;\n        }\n    }\n`;\nconst TagsList = styled.ul`\n    display:inline-block;\n    li{\n        display:inline-block;\n        margin-right:0.6em;\n        color:#8794a3;\n    }\n`\nconst TagIcon = styled(FontAwesomeIcon).attrs({\n    icon: \"tag\", color: \"#8794a3\"\n})`\n    display:inline-block;\n    margin:0 0.2em 0 0.4em;\n    opacity:0.5;\n`\nconst ClockIcon = styled(FontAwesomeIcon).attrs({\n    icon: \"clock\", color: \"#8794a3\"\n})`\n    display:inline-block;\n    margin:0 0.6em 0 0.4em;\n    opacity:0.5;\n`\n\nconst TitleBlock = styled.h1`\n    font-size:3em;\n    line-height:1.5em;\n    letter-spacing:-0.02em;\n    margin-bottom:2em;\n    font-weight: 800;\n    word-break: keep-all;\n`"]},"metadata":{},"sourceType":"module"}