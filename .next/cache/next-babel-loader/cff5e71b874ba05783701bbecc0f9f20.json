{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport CardList from '../components/cardList';\nimport client from '../config';\nimport styled from 'styled-components';\nimport Paginator from '../components/paginator';\n\nconst calculateRange = length => Array.from({\n  length\n}, (v, k) => k + 1);\n\nfunction Home(props) {\n  console.log(props);\n  const total = props.total;\n  const limit = props.limit;\n  const rangeLimit = Math.ceil(total / limit);\n  const range = calculateRange(rangeLimit);\n  const {\n    0: page,\n    1: updatePage\n  } = useState(!!props.page ? props.page : 1);\n  const {\n    0: tag,\n    1: updateTag\n  } = useState('');\n  useEffect(() => {\n    void router.push({\n      pathname: '/',\n      query: {\n        page: page,\n        tag: tag\n      }\n    });\n  }, [page, tag]);\n\n  const handleTagChosen = tag => {\n    updatePage(1);\n    updateTag(tag);\n  };\n\n  useEffect(() => {\n    var grid = document.querySelector('.grid');\n    var msnry = new Masonry(grid, {\n      itemSelector: '.grid-item'\n    });\n  }, []);\n  return __jsx(React.Fragment, null, \"..\");\n}\n\nHome.getInitialProps = async ({\n  query\n}) => {\n  let page = 1;\n\n  if (query.page) {\n    page = parseInt(query.page + '');\n  }\n\n  const limit = 2;\n  const {\n    entries,\n    total,\n    skip\n  } = await client.getEntries({\n    skip: (page - 1) * limit,\n    limit\n  });\n  return {\n    page,\n    entries,\n    total,\n    skip,\n    limit\n  };\n};\n\nexport default Home;\nconst CardContainer = styled.div.withConfig({\n  displayName: \"pages__CardContainer\",\n  componentId: \"sc-1cl0c4r-0\"\n})([\"padding:2em 0 1em;@media (max-width:968px){padding:0.5em 0;}\"]);","map":{"version":3,"sources":["/Users/chanki/react/next-blog/pages/index.js"],"names":["React","useEffect","useState","CardList","client","styled","Paginator","calculateRange","length","Array","from","v","k","Home","props","console","log","total","limit","rangeLimit","Math","ceil","range","page","updatePage","tag","updateTag","router","push","pathname","query","handleTagChosen","grid","document","querySelector","msnry","Masonry","itemSelector","getInitialProps","parseInt","entries","skip","getEntries","CardContainer","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,cAAc,GAAIC,MAAD,IAAYC,KAAK,CAACC,IAAN,CAAW;AAAEF,EAAAA;AAAF,CAAX,EAAuB,CAACG,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,CAArC,CAAnC;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,KAAK,GAAGH,KAAK,CAACG,KAApB;AAEA,QAAMC,KAAK,GAAGJ,KAAK,CAACI,KAApB;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,GAAGC,KAAlB,CAAnB;AACA,QAAMI,KAAK,GAAGf,cAAc,CAACY,UAAD,CAA5B;AAEA,QAAM;AAAA,OAACI,IAAD;AAAA,OAAOC;AAAP,MAAqBtB,QAAQ,CAAC,CAAC,CAACY,KAAK,CAACS,IAAR,GAAeT,KAAK,CAACS,IAArB,GAA4B,CAA7B,CAAnC;AACA,QAAM;AAAA,OAACE,GAAD;AAAA,OAAMC;AAAN,MAAmBxB,QAAQ,CAAC,EAAD,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,SAAK0B,MAAM,CAACC,IAAP,CAAY;AAAEC,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,KAAK,EAAE;AAAEP,QAAAA,IAAI,EAAEA,IAAR;AAAcE,QAAAA,GAAG,EAAEA;AAAnB;AAAxB,KAAZ,CAAL;AACH,GAFQ,EAEN,CAACF,IAAD,EAAOE,GAAP,CAFM,CAAT;;AAIA,QAAMM,eAAe,GAAIN,GAAD,IAAS;AAC7BD,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,IAAAA,SAAS,CAACD,GAAD,CAAT;AACH,GAHD;;AAIAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI+B,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX;AACA,QAAIC,KAAK,GAAG,IAAIC,OAAJ,CAAYJ,IAAZ,EAAkB;AAC1BK,MAAAA,YAAY,EAAE;AADY,KAAlB,CAAZ;AAGH,GALQ,EAKN,EALM,CAAT;AAMA,SACI,iCADJ;AAKH;;AAEDxB,IAAI,CAACyB,eAAL,GAAuB,OAAO;AAAER,EAAAA;AAAF,CAAP,KAAqB;AACxC,MAAIP,IAAI,GAAG,CAAX;;AAEA,MAAIO,KAAK,CAACP,IAAV,EAAgB;AACZA,IAAAA,IAAI,GAAGgB,QAAQ,CAACT,KAAK,CAACP,IAAN,GAAa,EAAd,CAAf;AACH;;AACD,QAAML,KAAK,GAAG,CAAd;AAEA,QAAM;AAAEsB,IAAAA,OAAF;AAAWvB,IAAAA,KAAX;AAAkBwB,IAAAA;AAAlB,MAA2B,MAAMrC,MAAM,CAACsC,UAAP,CAAkB;AACrDD,IAAAA,IAAI,EAAE,CAAClB,IAAI,GAAG,CAAR,IAAaL,KADkC;AAErDA,IAAAA;AAFqD,GAAlB,CAAvC;AAIA,SAAO;AAAEK,IAAAA,IAAF;AAAQiB,IAAAA,OAAR;AAAiBvB,IAAAA,KAAjB;AAAwBwB,IAAAA,IAAxB;AAA8BvB,IAAAA;AAA9B,GAAP;AACH,CAbD;;AAeA,eAAeL,IAAf;AAEA,MAAM8B,aAAa,GAAGtC,MAAM,CAACuC,GAAV;AAAA;AAAA;AAAA,oEAAnB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CardList from '../components/cardList';\nimport client from '../config';\nimport styled from 'styled-components';\nimport Paginator from '../components/paginator';\n\nconst calculateRange = (length) => Array.from({ length }, (v, k) => k + 1);\n\nfunction Home(props) {\n    console.log(props)\n    const total = props.total;\n\n    const limit = props.limit;\n    const rangeLimit = Math.ceil(total / limit);\n    const range = calculateRange(rangeLimit);\n\n    const [page, updatePage] = useState(!!props.page ? props.page : 1);\n    const [tag, updateTag] = useState('');\n\n    useEffect(() => {\n        void router.push({ pathname: '/', query: { page: page, tag: tag } });\n    }, [page, tag]);\n\n    const handleTagChosen = (tag) => {\n        updatePage(1);\n        updateTag(tag);\n    };\n    useEffect(() => {\n        var grid = document.querySelector('.grid');\n        var msnry = new Masonry(grid, {\n            itemSelector: '.grid-item'\n        });\n    }, [])\n    return (\n        <>\n            ..\n        </>\n    )\n}\n\nHome.getInitialProps = async ({ query }) => {\n    let page = 1;\n\n    if (query.page) {\n        page = parseInt(query.page + '');\n    }\n    const limit = 2;\n\n    const { entries, total, skip } = await client.getEntries({\n        skip: (page - 1) * limit,\n        limit,\n    });\n    return { page, entries, total, skip, limit };\n}\n\nexport default Home;\n\nconst CardContainer = styled.div`\n    padding:2em 0 1em;\n    @media (max-width: 968px) {\n        padding:0.5em 0;\n    }\n`"]},"metadata":{},"sourceType":"module"}