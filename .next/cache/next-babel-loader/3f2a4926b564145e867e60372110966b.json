{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/chanki/react/next-blog/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport CardList from '../components/cardList';\nimport client from '../config';\nimport styled from 'styled-components';\nimport Pagination from '../components/paginator';\n\nvar calculateRange = function calculateRange(length) {\n  return Array.from({\n    length: length\n  }, function (v, k) {\n    return k + 1;\n  });\n};\n\nfunction Home(props) {\n  var total = props.total;\n  var limit = props.limit;\n  var rangeLimit = Math.ceil(total / limit);\n  var range = rangeLimit + 1;\n  console.log(limit, rangeLimit, range); // const [page, updatePage] = useState(!!props.page ? props.page : 1);\n\n  useEffect(function () {\n    var grid = document.querySelector('.grid');\n    var msnry = new Masonry(grid, {\n      itemSelector: '.grid-item'\n    });\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(CardContainer, {\n    className: \"grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.items.map(function (item) {\n    return __jsx(CardList, {\n      item: item,\n      key: item.sys.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  })), __jsx(\"div\", {\n    className: \"pagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n}\n\nHome.getInitialProps = function _callee(_ref) {\n  var query, page, limit, _ref2, items, total, skip;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref.query;\n          page = 1;\n\n          if (query.page) {\n            page = parseInt(query.page + '');\n          }\n\n          limit = 2;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(client.getEntries({\n            skip: (page - 1) * limit,\n            limit: limit\n          }));\n\n        case 6:\n          _ref2 = _context.sent;\n          items = _ref2.items;\n          total = _ref2.total;\n          skip = _ref2.skip;\n          return _context.abrupt(\"return\", {\n            page: page,\n            items: items,\n            total: total,\n            skip: skip,\n            limit: limit\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Home;\nvar CardContainer = styled.div.withConfig({\n  displayName: \"pages__CardContainer\",\n  componentId: \"sc-1cl0c4r-0\"\n})([\"padding:2em 0 1em;@media (max-width:968px){padding:0.5em 0;}\"]);","map":{"version":3,"sources":["/Users/chanki/react/next-blog/pages/index.js"],"names":["React","useEffect","useState","CardList","client","styled","Pagination","calculateRange","length","Array","from","v","k","Home","props","total","limit","rangeLimit","Math","ceil","range","console","log","grid","document","querySelector","msnry","Masonry","itemSelector","items","map","item","sys","id","getInitialProps","query","page","parseInt","getEntries","skip","CardContainer","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD;AAAA,SAAYC,KAAK,CAACC,IAAN,CAAW;AAAEF,IAAAA,MAAM,EAANA;AAAF,GAAX,EAAuB,UAACG,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAC,GAAG,CAAd;AAAA,GAAvB,CAAZ;AAAA,CAAvB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AAEA,MAAMC,KAAK,GAAGF,KAAK,CAACE,KAApB;AACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,GAAGC,KAAlB,CAAnB;AACA,MAAMI,KAAK,GAAGH,UAAU,GAAG,CAA3B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmBC,UAAnB,EAA+BG,KAA/B,EANiB,CAOjB;;AAGAnB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIsB,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX;AACA,QAAIC,KAAK,GAAG,IAAIC,OAAJ,CAAYJ,IAAZ,EAAkB;AAC1BK,MAAAA,YAAY,EAAE;AADY,KAAlB,CAAZ;AAGH,GALQ,EAKN,EALM,CAAT;AAMA,SACI,4BACI,MAAC,aAAD;AAAe,IAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,KAAK,CAACe,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACjB,MAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAL,CAASC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB;AAAA,GAApB,CADL,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAYH;;AAEDpB,IAAI,CAACqB,eAAL,GAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,QAASA,KAAT;AACfC,UAAAA,IADe,GACR,CADQ;;AAGnB,cAAID,KAAK,CAACC,IAAV,EAAgB;AACZA,YAAAA,IAAI,GAAGC,QAAQ,CAACF,KAAK,CAACC,IAAN,GAAa,EAAd,CAAf;AACH;;AACKpB,UAAAA,KANa,GAML,CANK;AAAA;AAAA,2CAQkBZ,MAAM,CAACkC,UAAP,CAAkB;AACnDC,YAAAA,IAAI,EAAE,CAACH,IAAI,GAAG,CAAR,IAAapB,KADgC;AAEnDA,YAAAA,KAAK,EAALA;AAFmD,WAAlB,CARlB;;AAAA;AAAA;AAQXa,UAAAA,KARW,SAQXA,KARW;AAQJd,UAAAA,KARI,SAQJA,KARI;AAQGwB,UAAAA,IARH,SAQGA,IARH;AAAA,2CAaZ;AAAEH,YAAAA,IAAI,EAAJA,IAAF;AAAQP,YAAAA,KAAK,EAALA,KAAR;AAAed,YAAAA,KAAK,EAALA,KAAf;AAAsBwB,YAAAA,IAAI,EAAJA,IAAtB;AAA4BvB,YAAAA,KAAK,EAALA;AAA5B,WAbY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAgBA,eAAeH,IAAf;AAEA,IAAM2B,aAAa,GAAGnC,MAAM,CAACoC,GAAV;AAAA;AAAA;AAAA,oEAAnB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CardList from '../components/cardList';\nimport client from '../config';\nimport styled from 'styled-components';\nimport Pagination from '../components/paginator';\n\nconst calculateRange = (length) => Array.from({ length }, (v, k) => k + 1);\n\nfunction Home(props) {\n    const total = props.total;\n\n    const limit = props.limit;\n    const rangeLimit = Math.ceil(total / limit);\n    const range = rangeLimit + 1;\n    console.log(limit, rangeLimit, range)\n    // const [page, updatePage] = useState(!!props.page ? props.page : 1);\n\n\n    useEffect(() => {\n        var grid = document.querySelector('.grid');\n        var msnry = new Masonry(grid, {\n            itemSelector: '.grid-item'\n        });\n    }, [])\n    return (\n        <>\n            <CardContainer className=\"grid\">\n                {props.items.map(item => (\n                    <CardList item={item} key={item.sys.id} />\n                ))}\n            </CardContainer>\n            <div className=\"pagination\">\n                {/* <Pagination handlePaginationChange={(event) => updatePage(event)} range={range} skip={page} /> */}\n            </div>\n        </>\n    )\n}\n\nHome.getInitialProps = async ({ query }) => {\n    let page = 1;\n\n    if (query.page) {\n        page = parseInt(query.page + '');\n    }\n    const limit = 2;\n\n    const { items, total, skip } = await client.getEntries({\n        skip: (page - 1) * limit,\n        limit,\n    });\n\n    return { page, items, total, skip, limit };\n}\n\nexport default Home;\n\nconst CardContainer = styled.div`\n    padding:2em 0 1em;\n    @media (max-width: 968px) {\n        padding:0.5em 0;\n    }\n`"]},"metadata":{},"sourceType":"module"}