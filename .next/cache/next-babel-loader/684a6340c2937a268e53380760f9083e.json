{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport CardList from '../components/cardList';\nimport client from '../config';\nimport styled from 'styled-components';\nimport Paginator from '../components/paginator';\n\nconst calculateRange = length => Array.from({\n  length\n}, (v, k) => k + 1);\n\nfunction Home(props) {\n  console.log(props);\n  const total = props.total;\n  const limit = props.limit;\n  const rangeLimit = Math.ceil(total / limit);\n  const range = calculateRange(rangeLimit);\n  const {\n    0: page,\n    1: updatePage\n  } = useState(!!props.page ? props.page : 1);\n  const {\n    0: tag,\n    1: updateTag\n  } = useState('');\n  useEffect(() => {// var grid = document.querySelector('.grid');\n    // var msnry = new Masonry(grid, {\n    //     itemSelector: '.grid-item'\n    // });\n  }, []);\n  return __jsx(React.Fragment, null);\n}\n\nHome.getInitialProps = async ({\n  query\n}) => {\n  let page = 1;\n\n  if (query.page) {\n    page = parseInt(query.page + '');\n  }\n\n  const limit = 2;\n  const {\n    items,\n    total,\n    skip\n  } = await client.getEntries({\n    skip: (page - 1) * limit,\n    limit\n  });\n  return {\n    page,\n    items,\n    total,\n    skip,\n    limit\n  };\n};\n\nexport default Home;\nconst CardContainer = styled.div.withConfig({\n  displayName: \"pages__CardContainer\",\n  componentId: \"sc-1cl0c4r-0\"\n})([\"padding:2em 0 1em;@media (max-width:968px){padding:0.5em 0;}\"]);","map":{"version":3,"sources":["/Users/chanki/react/next-blog/pages/index.js"],"names":["React","useEffect","useState","CardList","client","styled","Paginator","calculateRange","length","Array","from","v","k","Home","props","console","log","total","limit","rangeLimit","Math","ceil","range","page","updatePage","tag","updateTag","getInitialProps","query","parseInt","items","skip","getEntries","CardContainer","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,cAAc,GAAIC,MAAD,IAAYC,KAAK,CAACC,IAAN,CAAW;AAAEF,EAAAA;AAAF,CAAX,EAAuB,CAACG,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,CAArC,CAAnC;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,KAAK,GAAGH,KAAK,CAACG,KAApB;AAEA,QAAMC,KAAK,GAAGJ,KAAK,CAACI,KAApB;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,GAAGC,KAAlB,CAAnB;AACA,QAAMI,KAAK,GAAGf,cAAc,CAACY,UAAD,CAA5B;AAEA,QAAM;AAAA,OAACI,IAAD;AAAA,OAAOC;AAAP,MAAqBtB,QAAQ,CAAC,CAAC,CAACY,KAAK,CAACS,IAAR,GAAeT,KAAK,CAACS,IAArB,GAA4B,CAA7B,CAAnC;AACA,QAAM;AAAA,OAACE,GAAD;AAAA,OAAMC;AAAN,MAAmBxB,QAAQ,CAAC,EAAD,CAAjC;AAGAD,EAAAA,SAAS,CAAC,MAAM,CACZ;AACA;AACA;AACA;AACH,GALQ,EAKN,EALM,CAAT;AAMA,SACI,2BADJ;AAYH;;AAEDY,IAAI,CAACc,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AACxC,MAAIL,IAAI,GAAG,CAAX;;AAEA,MAAIK,KAAK,CAACL,IAAV,EAAgB;AACZA,IAAAA,IAAI,GAAGM,QAAQ,CAACD,KAAK,CAACL,IAAN,GAAa,EAAd,CAAf;AACH;;AACD,QAAML,KAAK,GAAG,CAAd;AAEA,QAAM;AAAEY,IAAAA,KAAF;AAASb,IAAAA,KAAT;AAAgBc,IAAAA;AAAhB,MAAyB,MAAM3B,MAAM,CAAC4B,UAAP,CAAkB;AACnDD,IAAAA,IAAI,EAAE,CAACR,IAAI,GAAG,CAAR,IAAaL,KADgC;AAEnDA,IAAAA;AAFmD,GAAlB,CAArC;AAKA,SAAO;AAAEK,IAAAA,IAAF;AAAQO,IAAAA,KAAR;AAAeb,IAAAA,KAAf;AAAsBc,IAAAA,IAAtB;AAA4Bb,IAAAA;AAA5B,GAAP;AACH,CAdD;;AAgBA,eAAeL,IAAf;AAEA,MAAMoB,aAAa,GAAG5B,MAAM,CAAC6B,GAAV;AAAA;AAAA;AAAA,oEAAnB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CardList from '../components/cardList';\nimport client from '../config';\nimport styled from 'styled-components';\nimport Paginator from '../components/paginator';\n\nconst calculateRange = (length) => Array.from({ length }, (v, k) => k + 1);\n\nfunction Home(props) {\n    console.log(props)\n    const total = props.total;\n\n    const limit = props.limit;\n    const rangeLimit = Math.ceil(total / limit);\n    const range = calculateRange(rangeLimit);\n\n    const [page, updatePage] = useState(!!props.page ? props.page : 1);\n    const [tag, updateTag] = useState('');\n\n\n    useEffect(() => {\n        // var grid = document.querySelector('.grid');\n        // var msnry = new Masonry(grid, {\n        //     itemSelector: '.grid-item'\n        // });\n    }, [])\n    return (\n        <>\n            {/* <CardContainer className=\"grid\">\n                {props.items.map(item => (\n                    <CardList item={item} key={item.sys.id} />\n                ))}\n            </CardContainer>\n            <div className=\"pagination\">\n                <Paginator handlePaginationChange={(event) => updatePage(event)} range={range} skip={page} />\n            </div> */}\n        </>\n    )\n}\n\nHome.getInitialProps = async ({ query }) => {\n    let page = 1;\n\n    if (query.page) {\n        page = parseInt(query.page + '');\n    }\n    const limit = 2;\n\n    const { items, total, skip } = await client.getEntries({\n        skip: (page - 1) * limit,\n        limit,\n    });\n\n    return { page, items, total, skip, limit };\n}\n\nexport default Home;\n\nconst CardContainer = styled.div`\n    padding:2em 0 1em;\n    @media (max-width: 968px) {\n        padding:0.5em 0;\n    }\n`"]},"metadata":{},"sourceType":"module"}